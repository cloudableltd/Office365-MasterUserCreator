<File version="3.1">
  <FileID>647ac33b-2f6c-4506-b5b1-339af0d70851</FileID>
  <Preview>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
RgAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[

function Set-DarkMode
{
	$formOptions.BackColor = "44,44,44"
	$tabpageGeneral.BackColor = "44,44,44"
	$tabpageGeneral.ForeColor = 'White'
	$groupboxFormSettings.BackColor = "44,44,44"
	$groupboxFormSettings.ForeColor = 'White'
	$groupboxUserSettings.BackColor = "44,44,44"
	$groupboxUserSettings.ForeColor = 'White'
	$groupboxO365Settings.BackColor = "44,44,44"
	$groupboxO365Settings.ForeColor = 'White'
	$textboxUserFormatDisplayName.BackColor = "35,35,35"
	$textboxUserFormatDisplayName.ForeColor = 'White'
	$textboxUserFormatEmail.BackColor = "35,35,35"
	$textboxUserFormatEmail.ForeColor = 'White'
	$textboxUserFormatSamAccountName.BackColor = "35,35,35"
	$textboxUserFormatSamAccountName.ForeColor = 'White'
	$textboxUserFormatUserPrincipalName.BackColor = "35,35,35"
	$textboxUserFormatUserPrincipalName.ForeColor = 'White'
	$buttonOK.BackColor = "35,35,35"
	$buttonOK.ForeColor = 'White'
	
	$linklabelUserFormats.linkColor = 'DeepSkyBlue'
	
	
	$tabpageADTitleCase.BackColor = "44,44,44"
	$tabpageADTitleCase.ForeColor = 'white'
	$groupboxgeneral.ForeColor = 'White'
	$groupboxgeneral.BackColor = "44,44,44"
	$groupboxADTitleCase.ForeColor = 'White'
	$groupboxADTitleCase.BackColor = "44,44,44"
	$groupboxAccount.BackColor = "44,44,44"
	$groupboxAccount.ForeColor = 'White'
	$groupboxAddress.BackColor = "44,44,44"
	$groupboxAddress.ForeColor = 'White'
	$groupboxOrganization.BackColor = "44,44,44"
	$groupboxOrganization.ForeColor = 'White'
	
	$tabpageO365TitleCase.BackColor = "44,44,44"
	$tabpageO365TitleCase.ForeColor = 'White'
	$groupboxO365TitleCase.BackColor = "44,44,44"
	$groupboxO365TitleCase.ForeColor = 'White'
	$groupboxO365General.BackColor = "44,44,44"
	$groupboxO365General.ForeColor = 'White'
	$groupboxO365Account.BackColor = "44,44,44"
	$groupboxO365Account.ForeColor = 'White'
	$groupboxO365Address.BackColor = "44,44,44"
	$groupboxO365Address.ForeColor = 'White'
	
	$comboboxDefaultCountryCode.FlatStyle = 'Flat'
	$comboboxDefaultCountryCode.BackColor = "35,35,35"
	$comboboxDefaultCountryCode.ForeColor = 'White'
	
	$textboxO365DisplayNameFormat.ForeColor = 'White'
	$textboxO365DisplayNameFormat.BackColor = "35,35,35"
	$textboxO365UPNFormat.ForeColor = 'White'
	$textboxO365UPNFormat.BackColor = "35,35,35"
	$linklabelO365UserFormats.linkColor = 'DeepSkyBlue'
	
	$textboxO365FormatEmail.BackColor = '35,35,35'
	$textboxO365FormatEmail.ForeColor = "White"
	
}

function Set-LightMode
{
	
	$linklabelUserFormats.linkColor = '0, 0, 255'
	
	$formOptions.BackColor = "WhiteSmoke"
	$tabpageGeneral.BackColor = "WhiteSmoke"
	$tabpageGeneral.ForeColor = 'Black'
	$groupboxFormSettings.BackColor = "White"
	$groupboxFormSettings.ForeColor = 'Black'
	$groupboxUserSettings.BackColor = "White"
	$groupboxUserSettings.ForeColor = 'Black'
	$groupboxO365Settings.BackColor = "White"
	$groupboxO365Settings.ForeColor = 'Black'
	$textboxUserFormatDisplayName.BackColor = "White"
	$textboxUserFormatDisplayName.ForeColor = 'Black'
	$textboxUserFormatEmail.BackColor = "White"
	$textboxUserFormatEmail.ForeColor = 'Black'
	$textboxUserFormatSamAccountName.BackColor = "White"
	$textboxUserFormatSamAccountName.ForeColor = 'Black'
	$textboxUserFormatUserPrincipalName.BackColor = "White"
	$textboxUserFormatUserPrincipalName.ForeColor = 'Black'
	$tabpageGeneral.BackColor = 'White'
	$buttonOK.BackColor = "White"
	$buttonOK.ForeColor = 'Black'
	
	
	$tabpageADTitleCase.BackColor = "White"
	$tabpageADTitleCase.ForeColor = 'Black'
	$groupboxgeneral.ForeColor = 'Black'
	$groupboxgeneral.BackColor = "White"
	$groupboxADTitleCase.ForeColor = 'Black'
	$groupboxADTitleCase.BackColor = "White"
	$groupboxAccount.BackColor = "White"
	$groupboxAccount.ForeColor = 'Black'
	$groupboxAddress.BackColor = "White"
	$groupboxAddress.ForeColor = 'Black'
	$groupboxOrganization.BackColor = "White"
	$groupboxOrganization.ForeColor = 'Black'
	
	$tabpageO365TitleCase.BackColor = "White"
	$tabpageO365TitleCase.ForeColor = 'Black'
	$groupboxO365TitleCase.BackColor = "White"
	$groupboxO365TitleCase.ForeColor = 'Black'
	$groupboxO365General.BackColor = "White"
	$groupboxO365General.ForeColor = 'Black'
	$groupboxO365Account.BackColor = "White"
	$groupboxO365Account.ForeColor = 'Black'
	$groupboxO365Address.BackColor = "White"
	$groupboxO365Address.ForeColor = 'Black'
	
	$comboboxDefaultCountryCode.FlatStyle = 'Standard'
	$comboboxDefaultCountryCode.BackColor = "White"
	$comboboxDefaultCountryCode.ForeColor = 'Black'
	
	$textboxO365DisplayNameFormat.ForeColor = 'Black'
	$textboxO365DisplayNameFormat.BackColor = "White"
	$textboxO365UPNFormat.ForeColor = 'Black'
	$textboxO365UPNFormat.BackColor = "White"
	$linklabelO365UserFormats.linkColor = '0, 0, 255'
	
	$textboxO365FormatEmail.BackColor = 'White'
	$textboxO365FormatEmail.ForeColor = "Black"
}
$formOptions_Load = {
	#CountryCode
	$CountryCode = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name CountryCode -ErrorAction SilentlyContinue).CountryCode
	If ($null -eq $CountryCode)
	{
		$comboboxDefaultCountryCode.SelectedItem = "US"
	}
	Else
	{ $comboboxDefaultCountryCode.SelectedItem = $CountryCode
		
	}
	$MFALogin = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name MFALogin -ErrorAction SilentlyContinue).MFALogin
	If ($MFALogin -eq 1)
	{
		$radiobuttonMultiFactorLogin.Checked = $true
	}
	Else
	{
		$radiobuttonNonMFALogin.Checked = $true
	}
	
	$AlwaysADCreate = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysADCreate -ErrorAction SilentlyContinue).AlwaysADCreate
	If ($AlwaysADCreate -eq 1)
	{
		$checkboxEnable.Checked = $true
	}
	
	$AlwaysO365Create = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysO365Create -ErrorAction SilentlyContinue).AlwaysO365Create
	If ($AlwaysO365Create -eq 1)
	{
		$checkboxCheckboxAlwaysO365.Checked = $true
	}
	
	$DarkMode = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name DarkMode -ErrorAction SilentlyContinue).DarkMode
	If ($DarkMode -eq 1)
	{
		Set-DarkMode
		$checkboxDarkMode.Checked = $true
	}
	Else
	{
		Set-LightMode
		$checkboxDarkMode.Checked = $false
	}
	
	
	##############
	$PasswordSettings = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name PasswordGen -ErrorAction SilentlyContinue).PasswordGen
	If ($PasswordSettings -eq 0)
	{
		$radiobuttonPronounceablePasswor.Checked = $true
	}
	Else
	{
		$radiobuttonRandomCharacterPassw.Checked = $true
	}
	$ADTitleCase = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADTitleCase -ErrorAction SilentlyContinue).ADTitleCase
	If ($ADTitleCase -eq 1)
	{
		$checkboxADTitleCase.Checked = $true
	}
	Else
	{
		$checkboxSelectAll.Enabled = $false
		$checkboxADTitleCase.Checked = $false
		
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	$O365TitleCase = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365TitleCase -ErrorAction SilentlyContinue).O365TitleCase
	If ($O365TitleCase -eq 1)
	{
		$checkboxO365TitleCase.Checked = $true
	}
	Else
	{
		$checkboxO365SelectAll.Enabled = $false
		$checkboxO365TitleCase.Checked = $false
		
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	
	$ADFirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADFirstName -ErrorAction SilentlyContinue).ADFirstName
	If ($ADFirstName -eq 1)
	{
		$checkboxfirstname.Checked = $true
	}
	Else
	{
		$checkboxfirstname.Checked = $false
	}
	#Initials
	$ADFirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADInitials -ErrorAction SilentlyContinue).ADInitials
	If ($ADFirstName -eq 1)
	{
		$checkboxinitial.Checked = $true
	}
	Else
	{
		$checkboxinitial.Checked = $false
	}
	#LastName
	$ADLastName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADLastName -ErrorAction SilentlyContinue).ADLastName
	If ($ADLastName -eq 1)
	{
		$checkboxlastname.Checked = $true
	}
	Else
	{
		$checkboxlastname.Checked = $false
	}
	#DisplayName
	$ADDisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDisplayName -ErrorAction SilentlyContinue).ADDisplayName
	If ($ADDisplayName -eq 1)
	{
		$checkboxdisplayname.Checked = $true
	}
	Else
	{
		$checkboxdisplayname.Checked = $false
	}
	#Description
	$ADDescription = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription
	If ($ADDescription -eq 1)
	{
		$checkboxdescription.Checked = $true
	}
	Else
	{
		$checkboxdescription.Checked = $false
	}
	#UserPrincipalName
	$ADUPN = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADUPN -ErrorAction SilentlyContinue).ADUPN
	If ($ADUPN -eq 1)
	{
		$checkboxupn.Checked = $true
	}
	Else
	{
		$checkboxupn.Checked = $false
	}
	#Office
	$ADOffice = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice
	If ($ADOffice -eq 1)
	{
		$checkboxoffice.Checked = $true
	}
	Else
	{
		$checkboxoffice.Checked = $false
	}
	#SamAccountName
	$ADSamAccountName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADSamAccountName -ErrorAction SilentlyContinue).ADSamAccountName
	If ($ADSamAccountName -eq 1)
	{
		$checkboxsamaccountname.Checked = $true
	}
	Else
	{
		$checkboxsamaccountname.Checked = $false
	}
	#Street
	$ADStreet = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADStreet -ErrorAction SilentlyContinue).ADStreet
	If ($ADStreet -eq 1)
	{
		$checkboxstreet.Checked = $true
	}
	Else
	{
		$checkboxstreet.Checked = $false
	}
	#City
	$ADCity = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity
	If ($ADCity -eq 1)
	{
		$checkboxcity.Checked = $true
	}
	Else
	{
		$checkboxcity.Checked = $false
	}
	#State
	$ADState = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState
	If ($ADState -eq 1)
	{
		$checkboxstate.Checked = $true
	}
	Else
	{
		$checkboxstate.Checked = $false
	}
	#JobTitle
	$ADJobTitle = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADJobTitle -ErrorAction SilentlyContinue).ADJobTitle
	If ($ADJobTitle -eq 1)
	{
		$checkboxjobtitle.Checked = $true
	}
	Else
	{
		$checkboxjobtitle.Checked = $false
	}
	#Department
	$ADDepartment = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment
	If ($ADDepartment -eq 1)
	{
		$checkboxdepartment.Checked = $true
	}
	Else
	{
		$checkboxdepartment.Checked = $false
	}
	#Company
	$ADCompany = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany
	If ($ADCompany -eq 1)
	{
		$checkboxcompany.Checked = $true
	}
	Else
	{
		$checkboxcompany.Checked = $false
	}
	
	#O365
	#O365FirstName
	$O365FirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365FirstName -ErrorAction SilentlyContinue).O365FirstName
	If ($O365FirstName -eq 1)
	{
		$checkboxO365FirstName.Checked = $true
	}
	Else
	{
		$checkboxO365FirstName.Checked = $false
	}
	#O365LastName
	$O365LastName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365LastName -ErrorAction SilentlyContinue).O365LastName
	If ($O365LastName -eq 1)
	{
		$checkboxO365LastName.Checked = $true
	}
	Else
	{
		$checkboxO365LastName.Checked = $false
	}
	#O365DisplayName
	$O365DisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365DisplayName -ErrorAction SilentlyContinue).O365DisplayName
	If ($O365DisplayName -eq 1)
	{
		$checkboxO365DisplayName.Checked = $true
	}
	Else
	{
		$checkboxO365DisplayName.Checked = $false
	}
	#O365UPN
	$O365UPN = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365UPN -ErrorAction SilentlyContinue).O365UPN
	If ($O365UPN -eq 1)
	{
		$checkboxO365UPN.Checked = $true
	}
	Else
	{
		$checkboxO365UPN.Checked = $false
	}
	#O365Street
	$O365Street = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365Street -ErrorAction SilentlyContinue).O365Street
	If ($O365Street -eq 1)
	{
		$checkboxO365Street.Checked = $true
	}
	Else
	{
		$checkboxO365Street.Checked = $false
	}
	#O365City
	$O365City = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City
	If ($O365City -eq 1)
	{
		$checkboxO365City.Checked = $true
	}
	Else
	{
		$checkboxO365City.Checked = $false
	}
	#O365State
	$O365State = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State
	If ($O365State -eq 1)
	{
		$checkboxO365State.Checked = $true
	}
	Else
	{
		$checkboxO365State.Checked = $false
	}
	
	
	
	#Reset Form
	$ResetForm = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ResetForm -ErrorAction SilentlyContinue).ResetForm
	If ($ResetForm -eq 1)
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $true
	}
	Else
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $false
	}
	
	
	#UserFormatDisplayName
	$UserFormatDisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatDisplayName -ErrorAction SilentlyContinue).UserFormatDisplayName
	$textboxUserFormatDisplayName.Text = $UserFormatDisplayName
	
	#UserFormatO365DisplayName
	$UserFormatO365DisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365DisplayName -ErrorAction SilentlyContinue).UserFormatO365DisplayName
	$textboxO365DisplayNameFormat.Text = $UserFormatO365DisplayName
	
	#UserFormatO365Email
	$UserFormatO365Email = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365Email -ErrorAction SilentlyContinue).UserFormatO365Email
	$textboxO365FormatEmail.Text = $UserFormatO365Email
	
	#UserFormatEmail
	$UserFormatEmail = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatEmail -ErrorAction SilentlyContinue).UserFormatEmail
	$textboxUserFormatEmail.Text = $UserFormatEmail
	
	#UserFormatSamAccountName
	$UserFormatSamAccountName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatSamAccountName -ErrorAction SilentlyContinue).UserFormatSamAccountName
	$textboxUserFormatSamAccountName.Text = $UserFormatSamAccountName
	
	#UserFormatUserPrincipalName
	$UserFormatUserPrincipalName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatUserPrincipalName -ErrorAction SilentlyContinue).UserFormatUserPrincipalName
	$textboxUserFormatUserPrincipalName.Text = $UserFormatUserPrincipalName
	
	#UserFormatUserPrincipalName
	$UserFormatO365UserPrincipalName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365UserPrincipalName -ErrorAction SilentlyContinue).UserFormatO365UserPrincipalName
	$textboxO365UPNFormat.Text = $UserFormatO365UserPrincipalName
	
	
	
	#RESET FORM SETTINGS
	
	##AD
	#Description
	$ADDescriptionReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription
	If ($ADDescriptionReset -eq 1)
	{
		$checkboxResetADDesc.Checked = $true
	}
	
	#Office
	$ADOfficeReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice
	If ($ADOfficeReset -eq 1)
	{
		$checkboxResetADOffice.Checked = $true
	}
	
	#City
	$ADCityReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity
	If ($ADCityReset -eq 1)
	{
		$checkboxResetADCity.Checked = $true
	}
	
	#State
	$ADStateReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState
	If ($ADStateReset -eq 1)
	{
		$checkboxResetADState.Checked = $true
	}
	
	#Zip
	$ADZipReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADZip -ErrorAction SilentlyContinue).ADZip
	If ($ADZipReset -eq 1)
	{
		$checkboxResetADZip.Checked = $true
	}
	
	#Department
	$ADDepartmentReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment
	If ($ADDepartmentReset -eq 1)
	{
		$checkboxResetADDepartment.Checked = $true
	}
	
	#Company
	$ADCompanyReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany
	If ($ADCompanyReset -eq 1)
	{
		$checkboxResetADCompany.Checked = $true
	}
	
	#Logon Script
	$ADLogonScriptReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADLogonScript -ErrorAction SilentlyContinue).ADLogonScript
	If ($ADLogonScriptReset -eq 1)
	{
		$checkboxResetADLogonScript.Checked = $true
	}
	
	
	##OFFICE 365
	
	#City
	$O365CityReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City
	If ($O365CityReset -eq 1)
	{
		$checkbox1ResetO365City.Checked = $true
	}
	
	#State
	$O365StateReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State
	If ($O365StateReset -eq 1)
	{
		$checkboxResetO365State.Checked = $true
	}
	
	#Zip
	$O365ZipReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365Zip -ErrorAction SilentlyContinue).O365Zip
	If ($O365ZipReset -eq 1)
	{
		$checkboxResetO365Zip.Checked = $true
	}
	
}

$buttonOK_Click = {

	#ADTitleCase
	If ($checkboxADTitleCase.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 0 -Force | Out-Null
		
	}
	#Firstname
	If (($checkboxfirstname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstname -Value 0 -Force | Out-Null
		
	}
	#Initials
	If (($checkboxinitial.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 0 -Force | Out-Null
		
	}
	#Lastname
	If (($checkboxlastname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 0 -Force | Out-Null
		
	}
	#DisplayName
	If (($checkboxdisplayname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 0 -Force | Out-Null
		
	}
	#Description
	If (($checkboxdescription.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force | Out-Null
		
	}
	#UserPrincipalName
	If (($checkboxupn.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 0 -Force | Out-Null
		
	}
	#Office
	If (($checkboxoffice.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force | Out-Null
		
	}
	#SamAccountName
	If (($checkboxsamaccountname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 0 -Force | Out-Null
		
	}
	#Street
	If (($checkboxstreet.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 0 -Force | Out-Null
		
	}
	#City
	If (($checkboxcity.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force | Out-Null
		
	}
	#State
	If (($checkboxstate.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 0 -Force | Out-Null
		
	}
	#JobTitle
	If (($checkboxjobtitle.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 0 -Force | Out-Null
		
	}
	#Department
	If (($checkboxdepartment.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force | Out-Null
		
	}
	#Company
	If (($checkboxcompany.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force | Out-Null
		
	}
	
	#O365TitleCase
	If ($checkboxO365TitleCase.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 0 -Force | Out-Null
		
	}
	#O365FirstName
	If (($checkboxO365FirstName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 0 -Force | Out-Null
		
	}
	#O365LastName
	If (($checkboxO365LastName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 0 -Force | Out-Null
		
	}
	#O365DisplayName
	If (($checkboxO365DisplayName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 0 -Force | Out-Null
		
	}
	#O365UPN
	If (($checkboxO365UPN.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 0 -Force | Out-Null
		
	}
	#O365Street
	If (($checkboxO365Street.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 0 -Force | Out-Null
		
	}
	#O365City
	If (($checkboxO365City.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 0 -Force | Out-Null
		
	}
	#O365State
	If (($checkboxO365State.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 0 -Force | Out-Null
		
	}
	
	#Password Options
	If ($radiobuttonPronounceablePasswor.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 0 -Force | Out-Null
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 1 -Force | Out-Null
		
	}
	
	#Reset Form After User Creation
	If ($checkboxResetAfterUserCreationEnabled.Checked -eq $false)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 0 -Force | Out-Null
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 1 -Force | Out-Null
		
	}
	
	#UserFormatDisplayName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value $textboxUserFormatDisplayName.Text -Force | Out-Null
	If ("" -eq $textboxUserFormatDisplayName.text)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value "%FirstName% %LastName%" -Force | Out-Null
		
	}
	#UserFormatO365DisplayName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365DisplayName -Value $textboxO365DisplayNameFormat.Text -Force | Out-Null
	
	#UserFormatEmail
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatEmail -Value $textboxUserFormatEmail.Text -Force | Out-Null
	
	#UserFormatO365Email
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365Email -Value $textboxO365FormatEmail.Text -Force | Out-Null
	
	
	#UserFormatSamAccountName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatSamAccountName -Value $textboxUserFormatSamAccountName.Text -Force | Out-Null
	
	#UserFormatUserPrincipalName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatUserPrincipalName -Value $textboxUserFormatUserPrincipalName.Text -Force | Out-Null
	
	#UserFormatO365UserPrincipalName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365UserPrincipalName -Value $textboxO365UPNFormat.Text -Force | Out-Null
	
	#CountryCode
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name CountryCode -Value $comboboxDefaultCountryCode.SelectedItem -Force | Out-Null
	
}



$checkboxADTitleCase_CheckedChanged = {
	if ($checkboxADTitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxSelectAll.Enabled = $false
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	Else
	{
		$checkboxSelectAll.Enabled = $true
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
	
	
}

$checkboxSelectAll_CheckedChanged={
	If (($checkboxSelectAll.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	Else
	{
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
}

$checkboxO365SelectAll_CheckedChanged={
	If (($checkboxO365SelectAll.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	Else
	{
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
	
}

$checkboxO365TitleCase_CheckedChanged={
	if ($checkboxO365TitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxO365SelectAll.Enabled = $false
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	Else
	{
		$checkboxO365SelectAll.Enabled = $true
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
	
}

#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
	$ComboBox.ValueMember = $ValueMember
}

function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}
#endregion

$linklabelUserFormats_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
Show-UserFormattingHelp_PSF
	
}

$checkboxDarkMode_CheckedChanged={
	If ($checkboxDarkMode.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 1 -Force | Out-Null
		
		Set-DarkMode
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 0 -Force | Out-Null
		
		Set-LightMode
		
	}
	
}

$checkboxEnable_CheckedChanged={
	If ($checkboxEnable.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 0 -Force | Out-Null
	}
	
}

$checkboxCheckboxAlwaysO365_CheckedChanged={
	If ($checkboxCheckboxAlwaysO365.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 1 -Force | Out-Null
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 0 -Force | Out-Null
	
	}
	
}

$radiobuttonNonMFALogin_CheckedChanged={
	If ($radiobuttonNonMFALogin.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 0 -Force | Out-Null
		
	}
	
}

$radiobuttonMultiFactorLogin_CheckedChanged={
	If ($radiobuttonMultiFactorLogin.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 1 -Force | Out-Null
		
	}
	
}


$checkboxResetADDesc_CheckedChanged={
	If ($checkboxResetADDesc.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADOffice_CheckedChanged={
	If ($checkboxResetADOffice.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADCity_CheckedChanged={
	If ($checkboxResetADCity.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADState_CheckedChanged={
	If ($checkboxResetADState.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADZip_CheckedChanged={
	If ($checkboxResetADZip.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADDepartment_CheckedChanged={
	If ($checkboxResetADDepartment.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force | Out-Null
		
	}
	
	
}

$checkboxResetADCompany_CheckedChanged={
	If ($checkboxResetADCompany.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADLogonScript_CheckedChanged={
	If ($checkboxResetADLogonScript.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 0 -Force | Out-Null
		
	}
	
}

$checkbox1ResetO365City_CheckedChanged={
	If ($checkbox1ResetO365City.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetO365State_CheckedChanged={
	If ($checkboxResetO365State.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetO365Zip_CheckedChanged={
	If ($checkboxResetO365Zip.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 0 -Force | Out-Null
		
	}
	
}

$linklabelO365UserFormats_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Show-O365UserFormattingHelp_psf
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>